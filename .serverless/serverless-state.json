{
  "service": {
    "service": "serverless-eventbus",
    "serviceObject": {
      "name": "serverless-eventbus"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "go1.x",
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "EventsCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-eventbus-dev-EventsCreate"
            }
          },
          "SubscriptionsCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-eventbus-dev-SubscriptionsCreate"
            }
          },
          "SubscriptionsDeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-eventbus-dev-SubscriptionsDelete"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-eventbus",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-eventbus-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-eventbus-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-eventbus",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EventsCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-eventbus/dev/1565502978691-2019-08-11T05:56:18.691Z/bin/events/create.zip"
              },
              "FunctionName": "serverless-eventbus-dev-EventsCreate",
              "Handler": "create",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AUTHENTICATION_TOKEN": "lemme in",
                  "DATABASE_USER": "postgres",
                  "DATABASE_PASSWORD": "postgres",
                  "DATABASE_HOST": "eventsbus.cmwnrrc8s1gz.us-east-1.rds.amazonaws.com",
                  "DATABASE_NAME": "eventsbus"
                }
              }
            },
            "DependsOn": [
              "EventsCreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "EventsCreateLambdaVersionfqR2evL3LjEl83CgUPgbh4EnAqpgYDA1h4IqJU66OM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EventsCreateLambdaFunction"
              },
              "CodeSha256": "7MIrXEzBxtc4D/kt26ur1c1VH6O6ZugzyflH2r1IkWw="
            }
          },
          "SubscriptionsCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-eventbus/dev/1565502978691-2019-08-11T05:56:18.691Z/bin/subscriptions/create.zip"
              },
              "FunctionName": "serverless-eventbus-dev-SubscriptionsCreate",
              "Handler": "create",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AUTHENTICATION_TOKEN": "lemme in",
                  "DATABASE_USER": "postgres",
                  "DATABASE_PASSWORD": "postgres",
                  "DATABASE_HOST": "eventsbus.cmwnrrc8s1gz.us-east-1.rds.amazonaws.com",
                  "DATABASE_NAME": "eventsbus"
                }
              }
            },
            "DependsOn": [
              "SubscriptionsCreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SubscriptionsCreateLambdaVersion4NlPIy8rdKi8rUxkkuBBYqX30XhrWHJV9km7N4NGU4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SubscriptionsCreateLambdaFunction"
              },
              "CodeSha256": "klAvG9dyzj87/dJ/olNLN0nS8wVfIsnU2XH9wNrH75M="
            }
          },
          "SubscriptionsDeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-eventbus/dev/1565502978691-2019-08-11T05:56:18.691Z/bin/subscriptions/delete.zip"
              },
              "FunctionName": "serverless-eventbus-dev-SubscriptionsDelete",
              "Handler": "delete",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AUTHENTICATION_TOKEN": "lemme in",
                  "DATABASE_USER": "postgres",
                  "DATABASE_PASSWORD": "postgres",
                  "DATABASE_HOST": "eventsbus.cmwnrrc8s1gz.us-east-1.rds.amazonaws.com",
                  "DATABASE_NAME": "eventsbus"
                }
              }
            },
            "DependsOn": [
              "SubscriptionsDeleteLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SubscriptionsDeleteLambdaVersionQeuPJIcLxVPb5LROY6hBgh8cRRFg0DpZipAiMiHqQg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SubscriptionsDeleteLambdaFunction"
              },
              "CodeSha256": "9pi7i6OFnTpmZZTCU9+SzM1KioWrMsnDLsqIIrM51eo="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-eventbus",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceEvents": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "events",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSubscriptions": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "subscriptions",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSubscriptionsIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceSubscriptions"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodEventsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceEvents"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EventsCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodSubscriptionsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubscriptions"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SubscriptionsCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodSubscriptionsIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubscriptionsIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SubscriptionsDeleteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1565502976719": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodEventsPost",
              "ApiGatewayMethodSubscriptionsPost",
              "ApiGatewayMethodSubscriptionsIdVarDelete"
            ]
          },
          "EventsCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EventsCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SubscriptionsCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SubscriptionsCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SubscriptionsDeleteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SubscriptionsDeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "EventsCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EventsCreateLambdaVersionfqR2evL3LjEl83CgUPgbh4EnAqpgYDA1h4IqJU66OM"
            }
          },
          "SubscriptionsCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SubscriptionsCreateLambdaVersion4NlPIy8rdKi8rUxkkuBBYqX30XhrWHJV9km7N4NGU4"
            }
          },
          "SubscriptionsDeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SubscriptionsDeleteLambdaVersionQeuPJIcLxVPb5LROY6hBgh8cRRFg0DpZipAiMiHqQg"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "EventsCreate": {
        "handler": "create",
        "events": [
          {
            "http": {
              "path": "events",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": "bin/events/create.zip"
        },
        "environment": {
          "AUTHENTICATION_TOKEN": "lemme in",
          "DATABASE_USER": "postgres",
          "DATABASE_PASSWORD": "postgres",
          "DATABASE_HOST": "eventsbus.cmwnrrc8s1gz.us-east-1.rds.amazonaws.com",
          "DATABASE_NAME": "eventsbus"
        },
        "name": "serverless-eventbus-dev-EventsCreate",
        "memory": 1024,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      },
      "SubscriptionsCreate": {
        "handler": "create",
        "events": [
          {
            "http": {
              "path": "subscriptions",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": "bin/subscriptions/create.zip"
        },
        "environment": {
          "AUTHENTICATION_TOKEN": "lemme in",
          "DATABASE_USER": "postgres",
          "DATABASE_PASSWORD": "postgres",
          "DATABASE_HOST": "eventsbus.cmwnrrc8s1gz.us-east-1.rds.amazonaws.com",
          "DATABASE_NAME": "eventsbus"
        },
        "name": "serverless-eventbus-dev-SubscriptionsCreate",
        "memory": 1024,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      },
      "SubscriptionsDelete": {
        "handler": "delete",
        "events": [
          {
            "http": {
              "path": "subscriptions/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": "bin/subscriptions/delete.zip"
        },
        "environment": {
          "AUTHENTICATION_TOKEN": "lemme in",
          "DATABASE_USER": "postgres",
          "DATABASE_PASSWORD": "postgres",
          "DATABASE_HOST": "eventsbus.cmwnrrc8s1gz.us-east-1.rds.amazonaws.com",
          "DATABASE_NAME": "eventsbus"
        },
        "name": "serverless-eventbus-dev-SubscriptionsDelete",
        "memory": 1024,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/serverless-eventbus/dev/1565502978691-2019-08-11T05:56:18.691Z",
    "artifact": ""
  }
}